/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package base;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import register.register;
import view.Dashboard;


/**
 *
 * @author LAPTOP WA
 */
public class LoginMenu extends javax.swing.JFrame {

    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    /**
     * Creates new form LoginMenu
     */
    public LoginMenu() {
    initComponents();
    
      // Override properti dari GUI Designer
    txtUsername.setVisible(true);
    txtUsername.setEditable(true);
    txtUsername.setFocusable(true);
    txtUsername.setOpaque(true); // transparan
    txtUsername.setBorder(null);
    txtUsername.setBackground(Color.WHITE);
    txtUsername.setForeground(Color.BLACK); // tulisan jadi tidak terlihat
    txtUsername.requestFocusInWindow();


    
    txtUsername.addKeyListener(new java.awt.event.KeyAdapter() {
    @Override
    public void keyReleased(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            autoLoginWithRFID();
        }
    }
});

    // tambahkan inisialisasi RFID scanner di sini jika perlu
}



    public static String hashPassword(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] hashBytes = md.digest(password.getBytes());

            // Konversi byte array ke format heksadesimal
            StringBuilder hexString = new StringBuilder();
            for (byte b : hashBytes) {
                String hex = Integer.toHexString(0xff & b);
                if (hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            return null;
        }
    }
    
    public static boolean checkPassword(String enteredPassword, String storedHashedPassword) {
    return hashPassword(enteredPassword).equals(storedHashedPassword);
}


 
    

    private void checkDatabaseConnection() {
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cafetaria", "root", "");
            if (con != null) {
                JOptionPane.showMessageDialog(this, "Koneksi ke database berhasil!");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Gagal terhubung ke database: " + ex.getMessage());
        }
    }

     private void autoLoginWithRFID() {
        String rfid = txtUsername.getText().trim();
        if (rfid.isEmpty()) return;

        String query = "SELECT * FROM user WHERE id_rfid=?";
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cafetaria", "root", "");
            pst = con.prepareStatement(query);
            pst.setString(1, rfid);
            rs = pst.executeQuery();

            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "Login Berhasil dengan RFID");
                new Dashboard().setVisible(true);
                this.dispose();
                // this.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(null, "RFID tidak ditemukan");
            }
        } catch (SQLException ex) {
            System.out.println("Kesalahan SQL saat login RFID: " + ex.getMessage());
        } finally {
            try { if (rs != null) rs.close(); if (pst != null) pst.close(); if (con != null) con.close(); }
            catch (SQLException ex) { ex.printStackTrace(); }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLogin = new javax.swing.JButton();
        txtUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnReg = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnLogin.setBackground(new java.awt.Color(57, 62, 70));
        btnLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vector/log in.png"))); // NOI18N
        btnLogin.setBorder(null);
        btnLogin.setBorderPainted(false);
        btnLogin.setContentAreaFilled(false);
        btnLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLoginMouseClicked(evt);
            }
        });
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        getContentPane().add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 550, -1, -1));

        txtUsername.setBorder(null);
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });
        getContentPane().add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 380, 340, 20));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vector/LupaPass.png"))); // NOI18N
        jLabel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel2MouseMoved(evt);
            }
        });
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 555, 100, 20));

        txtPassword.setBorder(null);
        getContentPane().add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 490, 330, 20));

        btnReg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vector/btn register.png"))); // NOI18N
        btnReg.setBorder(null);
        btnReg.setContentAreaFilled(false);
        btnReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegActionPerformed(evt);
            }
        });
        getContentPane().add(btnReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 550, 80, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vector/Form. LogPage.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseMoved
        // TODO add your handling code here:
        jLabel2.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel2MouseMoved

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        base.SendCode sc = new base.SendCode();
        sc.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_jLabel2MousePressed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void btnLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseClicked

    }//GEN-LAST:event_btnLoginMouseClicked

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String query = "SELECT * FROM user WHERE username=? AND password=?";
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cafetaria", "root", "");
            pst = con.prepareStatement(query);
            pst.setString(1, txtUsername.getText().trim());
            pst.setString(2, hashPassword(txtPassword.getText()));
            rs = pst.executeQuery();

            if (rs.next()) {
                String storedHashedPassword = rs.getString("password"); // Ambil password yang sudah di-hash dari DB
                String enteredPassword = txtPassword.getText(); // Ambil password yang dimasukkan pengguna

                if (checkPassword(enteredPassword, storedHashedPassword)) {
                JOptionPane.showMessageDialog(null, "Login Berhasil");
                new Dashboard().setVisible(true); // pindahkan ke sini
                this.dispose();
                } else {
    JOptionPane.showMessageDialog(null, "Username atau password salah");
}

            } else {
                JOptionPane.showMessageDialog(null, "Username tidak ditemukan");
            }
        } catch (SQLException ex) {
            System.out.println("Terjadi kesalahan SQL: " + ex.getMessage());
            ex.printStackTrace();
        } finally {
            try {
            if (rs != null) rs.close();
            if (pst != null) pst.close();
            if (con != null) con.close();
            }  catch (SQLException ex) {
            System.out.println("Gagal menutup koneksi: " + ex.getMessage());
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegActionPerformed
        // TODO add your handling code here:
        new register().setVisible(true);
    this.dispose();
    }//GEN-LAST:event_btnRegActionPerformed

    /**
     * @param args the comand line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnReg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private static class SendCode {

        public SendCode() {
        }

        private void setVisible(boolean b) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }
    }
}
