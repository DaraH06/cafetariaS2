/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.plaf.basic.BasicInternalFrameUI;
/**
 *
 * @author M VARREL MAULANA R
 */
public class Menutambahpenjualan extends javax.swing.JInternalFrame {

    /**
     * Creates new form Menutambahpenjualan 
     */
    public Menutambahpenjualan() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui=(BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        
        getContentPane().setBackground(Color.WHITE); // ini penting
         loadBarangKeComboBox(); // <-- Tambahkan ini
         
         jTextfieldRounded1.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent evt) {
                hitungTotalHarga();
            }
        });
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void loadBarangKeComboBox() {
    try {
        String sql = "SELECT nama FROM barang";
        Connection conn = Koneksi.getConnection(); // pastikan kamu sudah punya class Koneksi
        PreparedStatement pst = conn.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();
        
        list_barang.removeAllItems(); // kosongkan dulu
        
        while (rs.next()) {
            list_barang.addItem(rs.getString("nama")); // masukkan nama barang
        }
        
        rs.close();
        pst.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
}
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        harga = new Palette.JTextfieldRounded();
        list_barang = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextfieldRounded1 = new Palette.JTextfieldRounded();
        jLabel3 = new javax.swing.JLabel();
        jTextfieldRounded2 = new Palette.JTextfieldRounded();
        jLabel4 = new javax.swing.JLabel();
        simpan = new Palette.Custom_ButtonRounded();

        list_barang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list_barangActionPerformed(evt);
            }
        });

        jLabel1.setText("Nama Barang");

        jLabel2.setText("Harga");

        jLabel3.setText("Jumlah");

        jLabel4.setText("Total Harga");

        simpan.setText("Simpan");
        simpan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                simpanMouseClicked(evt);
            }
        });
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextfieldRounded1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(list_barang, 0, 151, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addComponent(jLabel3))
                .addGap(111, 111, 111)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(harga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextfieldRounded2, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))))
                .addContainerGap(685, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(list_barang, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(harga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextfieldRounded1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextfieldRounded2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(636, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void list_barangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list_barangActionPerformed
        String namaBarang = (String) list_barang.getSelectedItem();
    try {
        String sql = "SELECT harga FROM barang WHERE nama = ?";
        Connection conn = Koneksi.getConnection();
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, namaBarang);
        ResultSet rs = pst.executeQuery();
        
        if (rs.next()) {
            int hargaBarang = rs.getInt("harga");
            harga.setText(String.valueOf(hargaBarang)); // set harga ke TextField
        }
        
        rs.close();
        pst.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_list_barangActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_simpanActionPerformed

    private void simpanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_simpanMouseClicked
        try {
        String namaBarang = (String) list_barang.getSelectedItem();
        int jumlah = Integer.parseInt(jTextfieldRounded1.getText());
        int totalHarga = Integer.parseInt(jTextfieldRounded2.getText());
        
        if (namaBarang == null || namaBarang.isEmpty() || jumlah <= 0 || totalHarga <= 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Mohon lengkapi data dengan benar!");
            return;
        }
        
        Connection conn = Koneksi.getConnection();

        // Ambil id_barang
        String sqlGetIdBarang = "SELECT id_barang FROM barang WHERE nama = ?";
        PreparedStatement pstGetIdBarang = conn.prepareStatement(sqlGetIdBarang);
        pstGetIdBarang.setString(1, namaBarang);
        ResultSet rsBarang = pstGetIdBarang.executeQuery();
        
        if (rsBarang.next()) {
            int idBarang = rsBarang.getInt("id_barang");
            
            // Ambil id_user admin
            String sqlGetIdUser = "SELECT id_user FROM user WHERE username = 'admin'";
            PreparedStatement pstGetIdUser = conn.prepareStatement(sqlGetIdUser);
            ResultSet rsUser = pstGetIdUser.executeQuery();
            
            if (rsUser.next()) {
                int idUser = rsUser.getInt("id_user");
                
                // Insert ke tabel penjualan
                String sqlInsert = "INSERT INTO penjualan (id_barang, id_user, jumlah, total_harga) VALUES (?, ?, ?, ?)";
                PreparedStatement pstInsert = conn.prepareStatement(sqlInsert);
                pstInsert.setInt(1, idBarang);
                pstInsert.setInt(2, idUser);
                pstInsert.setInt(3, jumlah);
                pstInsert.setInt(4, totalHarga);
                pstInsert.executeUpdate();
                
                javax.swing.JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
                
                // Reset form
                list_barang.setSelectedIndex(0);
                harga.setText("");
                jTextfieldRounded1.setText("");
                jTextfieldRounded2.setText("");
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Admin tidak ditemukan di tabel user!");
            }
            
            rsUser.close();
            pstGetIdUser.close();
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Barang tidak ditemukan!");
        }
        
        rsBarang.close();
        pstGetIdBarang.close();
    } catch (NumberFormatException e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Jumlah dan Total Harga harus berupa angka!");
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Gagal menyimpan data: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_simpanMouseClicked

    private void hitungTotalHarga() {
        try {
            int hargaBarang = Integer.parseInt(harga.getText());
            int jumlahBarang = Integer.parseInt(jTextfieldRounded1.getText());
            int total = hargaBarang * jumlahBarang;
            jTextfieldRounded2.setText(String.valueOf(total));
        } catch (NumberFormatException e) {
            jTextfieldRounded2.setText("0");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Palette.JTextfieldRounded harga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private Palette.JTextfieldRounded jTextfieldRounded1;
    private Palette.JTextfieldRounded jTextfieldRounded2;
    private javax.swing.JComboBox<String> list_barang;
    private Palette.Custom_ButtonRounded simpan;
    // End of variables declaration//GEN-END:variables
class Koneksi {
    private static Connection conn;

    public static Connection getConnection() {
        try {
            if (conn == null || conn.isClosed()) {
                String url = "jdbc:mysql://localhost:3306/cafetaria"; // <-- ganti nama_database
                String user = "root"; // username MySQL kamu
                String password = ""; // password MySQL kamu (kosongin kalau memang kosong)

                conn = DriverManager.getConnection(url, user, password);
                System.out.println("Koneksi Berhasil!");
            }
        } catch (SQLException e) {
            System.out.println("Koneksi Gagal! " + e.getMessage());
        }
        return conn;
    }
}
}
